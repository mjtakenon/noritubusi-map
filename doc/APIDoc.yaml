swagger: "2.0"
info:
  description: 乗りつぶしMAPのAPIです
  version: 0.0.1
  title: Swagger Petstore
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: mjtakenon@mjtakenon
host: localhost
basePath: /
tags:
  - name: railway
    description: 路線情報について
  - name: station
    description: 駅情報について
  - name: user
    description: ユーザの管理と乗車記録について
schemes:
  - http
paths:
  /railways/:
    get:
      tags:
        - railway
      summary: 路線一覧取得
      description: ""
      responses:
        200:
          description: OK
          schema:
            title: arrayOfRailways
            type: array
            items:
              title: railway
              description: "路線情報"
              type: object
              properties:
                name:
                  description: 路線名
                  type: string
                number:
                  description: 駅数
                  type: integer

  /railways/{railName}:
    get:
      tags:
        - railway
      summary: 路線情報取得
      description: ""
      operationId: getRailwaysInfo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: railName
          in: path
          description: 路線名、もしくは路線ID
          required: true
          type: string
      responses:
        "200":
          description: 路線情報取得が成功
          schema:
            title: arrayOfStations
            type: array
            items:
              title: station
              description: 駅情報
              type: object
              properties:
                id:
                  description: 駅ID
                  type: integer
                name:
                  description: 駅名
                  type: string
        "400":
          description: 不正なパラメータ
  /stations:
    get:
      tags:
        - station
      summary: 駅情報取得
      description: ""
      operationId: getStationsInfo
      produces:
        - application/json
      parameters:
        - name: begin_latitude
          in: query
          description: Latitude at the upper left of the screen
          required: true
          type: number
        - name: begin_longitude
          in: query
          description: Longitude at the upper left of the screen
          required: true
          type: number
        - name: end_latitude
          in: query
          description: Latitude at the lower right of the screen
          required: true
          type: number
        - name: end_longitude
          in: query
          description: Longitude at the lower right of the screen
          required: true
          type: number
      responses:
        "200":
          description: 駅情報取得が成功
          schema:
            title: arrayOfStations
            type: array
            items:
              $ref: "#/definitions/stationInfomation"

        "400":
          description: 不正なパラメータ
  /stations/{stationName}:
    get:
      tags:
        - station
      summary: "駅情報取得"
      description: ""
      parameters:
        - name: stationName
          description: "station ID"
          required: true
          in: path
          type: number
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/stationInfomation"
        400:
          description: 不正なパラメータ
        404:
          description: Not Found
  /stations/suggest:
    get:
      tags:
        - station
      summary: "指定された文字列を持つ駅名検索"
      description: ""
      parameters:
        - name: keyword
          description: "検索する文字列"
          required: true
          in: query
          type: string
      responses:
        200:
          description: OK
          schema:
            title: arrayOfStations
            type: array
            items:
              $ref: "#/definitions/stationInfomation"
        400:
          description: パラメータ不足

  "/users/{userid}":
    get:
      tags:
        - user
      summary: ユーザ情報取得
      description: ""
      operationId: getUserInfo
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: Created user object
          required: true
          type: string
      responses:
        "200":
          description: ユーザ情報の取得が成功
        "404":
          description: ユーザが見つからなかった
    put:
      tags:
        - user
      summary: ユーザ情報の変更
      description: ""
      parameters:
        - name: userid
          in: path
          description: Created user object
          required: true
          type: string
      responses:
        "200":
          description: OK
        "400":
          description: 情報変更が失敗
    delete:
      tags:
        - user
      summary: ユーザの削除
      description: ""
      parameters:
        - name: userid
          in: path
          description: Created user object
          required: true
          type: string
      responses:
        "200":
          description: OK
  "/users/{userid}/record":
    get:
      tags:
        - user
      summary: 乗り潰し駅情報取得
      description: ""
      operationId: recordUserInfo
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: Created user object
          required: true
          type: string
        - name: begin_latitude
          in: query
          description: An upper left latitude that searching for record
          required: true
          type: number
        - name: begin_longitude
          in: query
          description: An upper left longitude that searching for record
          required: true
          type: number
        - name: end_latitude
          in: query
          description: A lower right latitude that searching for record
          required: true
          type: number
        - name: end_longitude
          in: query
          description: A lower right longitude that searching for record
          required: true
          type: number
      responses:
        "200":
          description: 乗り潰し駅情報の取得が成功
        "404":
          description: 乗り潰し駅情報が見つからなかった
    post:
      tags:
        - user
      summary: 乗り潰し駅情報追加
      description: "ユーザID，駅ID，登録日時の組を乗り潰しテーブルに追加"
      parameters:
        - name: userid
          in: path
          description: Created user object
          required: true
          type: string
        - name: begin_station_id
          in: query
          description: A station ID that get on train
          required: true
          type: integer
        - name: end_station_id
          in: query
          description: A station ID that get out train
          required: true
          type: integer
        - name: railway_id
          in: query
          description: A railway ID
          required: true
          type: integer
      responses:
        "200":
          description: OK
        "400":
          description: 情報追加が失敗
  /signin:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        "400":
          description: Invalid username/password supplied
    post:
      tags:
        - user
      summary: ログイン情報受け取り
      description: ""
      responses:
        "200":
          description: OK
    delete:
      tags:
        - user
      summary: ログアウト
      description: ""
      operationId: logoutUser
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
  /signup:
    get:
      tags:
        - user
      summary: ユーザ登録ページ取得
      description: ""
      responses:
        "200":
          description: OK
    post:
      tags:
        - user
      summary: 入力されたユーザ情報受取
      description: ""
      responses:
        "200":
          description: OK
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: implicit
    scopes:
      "write:pets": modify pets in your account
      "read:pets": read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  stationInfomation:
    type: object
    properties:
      id:
        description: 駅ID
        type: integer
        example: 5871
      name:
        description: 駅名
        type: string
        example: 浜松
      latitude:
        description: 緯度
        type: number
        example: 34.70406000
      longitude:
        description: 経度
        type: number
        example: 137.73511750
      company:
        description: 運営会社
        type: string
        example: 東海旅客鉄道
      serviceProviderType:
        type: integer
        example: 2
      railwayName:
        description: 路線名
        type: string
        example: 東海道線
      railwayType:
        type: integer
        example: 11
